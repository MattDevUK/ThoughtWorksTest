#!/bin/sh
#
# chkconfig: 2345 50 30
# description: <%= @appName %> service

### BEGIN INIT INFO
# Provides: <%= @appName %>
# Description: <%= @appName %> service
# Required-Start: $network $local_fs
### END INIT INFO

[ -f /etc/rc.d/init.d/functions ] && . /etc/rc.d/init.d/functions

NAME=<%= @appName %>
JAR_HOME=<%= @appHome -%>/$NAME
PATH_TO_JAR=$JAR_HOME/$NAME.jar
export APP_PORT=8080
<% if @appName == "front-end" %>
export STATIC_URL=localhost
export QUOTE_SERVICE_URL=http://10.132.0.2:8080
export NEWSFEED_SERVICE_URL=http://10.132.0.3:8080
export NEWSFEED_SERVICE_TOKEN="T1&eWbYXNWG1w1^YGKDPxAWJ@^et^&kX"
<% end %>
ARGUMENTS=""

RETVAL=0

getpid() {
    PIDGET=$(ps -ef | grep $PATH_TO_JAR | grep -v grep | awk '{print $2}')
}

start() {
    getpid
    if [[ $PIDGET -gt 0 ]]; then
        echo "$NAME Service already running ..."
    else
        echo "Starting $NAME Service ..."
        cd $JAR_HOME && java $JAR_ARGS -jar $PATH_TO_JAR $ARGUMENTS >>/dev/null 2>&1 &
    fi
}

stop() {
    getpid
    if [[ $PIDGET -gt 0 ]]; then
      echo "Stopping $NAME service ($PIDGET) ..."
      /bin/kill -9 $PIDGET
    else
       echo "$NAME not running"
    fi
}

restart() {
    echo "Restarting $NAME: "
    stop
    sleep 3
    start
}

status() {
    getpid
    if [[ $PIDGET -gt 0 ]]; then
        echo "$NAME running as pid $PIDGET"
        return 0
    fi

    echo "$NAME not running"
    return 3
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    status)
        status
        ;;
    *)
        echo "Usage $0 {start|stop|restart|status}"
        RETVAL=1
esac
